class Solution {
public:
    string turnUp(string str,int i)
    {
        string ans= str;
        if(ans[i]=='9')
            ans[i]='0';
        else
            ans[i]+=1;
        return ans;
    }
    string turnDown(string str, int i)
    {
        string ans= str;
        if(ans[i]=='0')
            ans[i]='9';
        else
            ans[i]-=1;
        return ans;
    }
    int openLock(vector<string>& deadends, string target) {
        vector <int> vis(10000,0);
        for(int i=0;i<deadends.size();i++)
        {
           vis[stoi(deadends[i])]=1;
        }
        if(vis[0]==1)
            return -1;
        queue<string> q;
        q.push("0000");
        vis[0]=1;
        int ans=0;
        while(!q.empty())
        {
            int size=q.size();
            while(size>0)
            {
                string str=q.front();
                q.pop();
                if(str==target)
                    return ans;
                for(int i=0;i<4;i++)
                {
                    string turnup= turnUp(str,i);
                     string turndown= turnDown(str,i);
                    if(vis[stoi(turnup)]==0)
                    {
                        vis[stoi(turnup)]=1;
                        q.push(turnup);
                    }
                    if(vis[stoi(turndown)]==0)
                    {
                        vis[stoi(turndown)]=1;
                        q.push(turndown);
                    }
                }
                size--;
            }
            ans++;
        }
        return -1;
    }
};
