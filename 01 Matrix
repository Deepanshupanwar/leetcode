class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int m=mat.size();
        int n=mat[0].size();
        vector <vector<int>> ans(m,vector<int>(n,INT_MAX));
        queue<pair<int,int>>q;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(mat[i][j]==0)
                {
                    ans[i][j]=0;
                    q.push({i,j});
                }
            }
        }
         while(!q.empty())
                    {
                        pair<int,int> p=q.front();
                            int l=p.first;
                            int r=p.second;
                            q.pop();
                            if(r-1>=0)
                            {
                                if(ans[l][r-1]>ans[l][r]+1)
                                {
                                    ans[l][r-1]=ans[l][r]+1;
                                    q.push({l,r-1});
                                }
                            }
                            if(r+1<n)
                            {
                                if(ans[l][r+1]>ans[l][r]+1)
                                {
                                    ans[l][r+1]=ans[l][r]+1;
                                    q.push({l,r+1});
                                }
                            }
                            if(l-1>=0)
                            {
                                if(ans[l-1][r]>ans[l][r]+1)
                                {
                                    ans[l-1][r]=ans[l][r]+1;
                                    q.push({l-1,r});
                                }
                            }
                            if(l+1<m)
                            {
                                if(ans[l+1][r]>ans[l][r]+1)
                                {
                                    ans[l+1][r]=ans[l][r]+1;
                                   q.push({l+1,r});
                                }
                            }
                    }
        return ans;
    }
};
