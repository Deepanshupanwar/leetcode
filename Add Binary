class Solution {
public:
    string addBinary(string a, string b) {
       string res="";
        int l1=a.size()-1;
        int l2=b.size()-1;
        char c='0';
        while(l1>=0&&l2>=0)
        {
            if(a[l1]=='1'&&b[l2]=='1'&&c=='0')
            {
                res +="0";
                c='1' ;  
            }
            else if(a[l1]=='1'&&b[l2]=='1'&&c=='1')
            {
                res +="1";
                c='1';
            }
            else if((a[l1]=='0'&&b[l2]=='1'&&c=='1')||(a[l1]=='1'&b[l2]=='0'&&c=='1'))
            {
                res +="0";
                c='1';
            }
             else if((a[l1]=='0'&&b[l2]=='1'&&c=='0')||(a[l1]=='1'&b[l2]=='0'&&c=='0'))
            {
                res +="1";
                c='0';
            }
             else if(a[l1]=='0'&&b[l2]=='0'&&c=='0')
            {
                res +="0";
                c='0';
            }
            else if(a[l1]=='0'&&b[l2]=='0'&&c=='1')
            {
                res +="1";
                c='0';
            } 
                     l1--;
                     l2--;
                     
        }
                     if(l1>=0)
                     {
                         while(l1>=0)
                         {
                             if(c=='1')
                             {
                                 if(a[l1]=='1')
                                 {
                                     res +="0";
                                     c='1';
                                 }
                                 else
                                 {
                                     res +="1";
                                     c='0';
                                 }
                             }
                             else
                             {
                                 res +=a[l1];
                             }
                             l1--;
                         }
                     }
                     
                     if(l2>=0)
                     {
                         while(l2>=0)
                         {
                             if(c=='1')
                             {
                                 if(b[l2]=='1')
                                 {
                                     res +="0";
                                     c='1';
                                 }
                                 else
                                 {
                                     res +="1";
                                     c='0';
                                 }
                             }
                             else
                             {
                                 res +=b[l2];
                             }
                             l2--;
                         }
                     }
        if(c=='1')
        res += c;
                     reverse(res.begin(), res.end());
                     return res; 
    }
};
