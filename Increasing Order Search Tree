/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector <int> arr;
    void help(TreeNode *root)
    {
        if(root==NULL)
            return ;
        help(root->left);
        arr.push_back(root->val);
        help(root->right);
    }
    TreeNode* increasingBST(TreeNode* root) {
        help(root);
        TreeNode *ans=new TreeNode();
        ans->val=arr[0];
        TreeNode *temp=ans;
        for(int i=1;i<arr.size();i++)
        {
            ans->right=new TreeNode();
            ans=ans->right;
            ans->val=arr[i];
        }
        return temp;
    }
};
