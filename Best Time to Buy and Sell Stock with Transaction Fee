class Solution {
public:
     int m=0;
     int help(int ind,int buy,vector<int>& prices,vector<vector<int>> &dp)
    {
        if(ind>=prices.size())
            return 0;
        if(dp[ind][buy]!=-1)
            return dp[ind][buy];
        if(buy)
        {
            return dp[ind][buy]=max(-prices[ind]+help(ind+1,0,prices,dp),0+help(ind+1,1,prices,dp));
        }
        return dp[ind][buy]=max(prices[ind]-m+help(ind+1,1,prices,dp),0+help(ind+1,0,prices,dp));
    }
    int maxProfit(vector<int>& prices, int fee) {
        int n=prices.size();
        m=fee;
        vector<vector<int>> dp(n,vector<int> (2,-1));
        return help(0,1,prices,dp);
    }
};
