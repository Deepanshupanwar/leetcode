/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
    ListNode *start = new ListNode(n);
        ListNode *right = head;
        ListNode *left = head;
        int count = 0;
        ListNode *curr=head;
        while(curr!=NULL)
        {
            curr = curr->next;
            count++;
        }
          if(head!=NULL && count==n){
            ListNode *temp = head->next;
            delete head;
            return temp;
        }
      
        for(int i=0;i<n;i++)
        {
            right = right->next;
        }
        while(right!=NULL && right->next!=NULL){
            right=right->next;
            left = left->next;
        }
        left->next = left->next->next;
        return head;
    }
};
