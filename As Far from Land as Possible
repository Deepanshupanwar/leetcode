class Solution {
public:
   
    int maxDistance(vector<vector<int>>& grid) {
        int ans=0;
        int m=grid.size();
        queue <pair<int,int>> q;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==1)
                {
                    q.push({i,j});
                }
            }
        }
        while(!q.empty())
        {
           ans++;
            int size=q.size();
            while(size>0)
            {
                pair<int,int> p=q.front();
                int i=p.first;
                int j=p.second;
                if(j-1>=0&&grid[i][j-1]==0)
                {
                    grid[i][j-1]=1;
                    q.push({i,j-1});
                }
                if(j+1<m&&grid[i][j+1]==0)
                {
                    grid[i][j+1]=1;
                    q.push({i,j+1});
                }
                if(i-1>=0&&grid[i-1][j]==0)
                {
                    grid[i-1][j]=1;
                    q.push({i-1,j});
                }
                if(i+1<m&&grid[i+1][j]==0)
                {
                    grid[i+1][j]=1;
                    q.push({i+1,j});
                }
                q.pop();
                size--;
            }
        }
        if(ans==1)
            return -1;
        return ans-1;
    }
};
