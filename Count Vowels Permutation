class Solution {
public:
    int mod = 1e9 + 7;
    map<char,int> mp{{'a',0},{'e',1},{'i',2},{'o',3},{'u',4}};
    int count(int i,int n,char c,int dp[][5])
    {
        if(i==n)
        {
            return 1;  
        }
            if(dp[i][mp[c]]!=-1)
            {
                return dp[i][mp[c]]%mod;
                
            }
        long long int ans = 0;
        if(c=='a')
        {
            
          return  dp[i][0]=count(i+1,n,'e',dp)%mod;
        }
        else if(c=='e')
        {
          return  dp[i][1]=(count(i+1,n,'a',dp)%mod+count(i+1,n,'i',dp)%mod)%mod;
        }
        else if(c=='i')
        { 
          return  dp[i][2]=(count(i+1,n,'a',dp)+count(i+1,n,'e',dp)%mod)%mod+
               (count(i+1,n,'o',dp)%mod + count(i+1,n,'u',dp)%mod)%mod;
        }
        else if(c=='o')
        {
           return dp[i][3]= (count(i+1,n,'i',dp)%mod+count(i+1,n,'u',dp))%mod;
        }
        else if(c=='u')
        {
           return dp[i][4]=count(i+1,n,'a',dp)%mod;
        } 
        return 0;
    }
    int countVowelPermutation(int n) {
        int dp[20001][5];
        memset(dp,-1,sizeof(dp));
        int d=0;
        return (((count(1,n,'a',dp)%mod+ count(1,n,'e',dp)%mod)%mod+
        (count(1,n,'i',dp)%mod+count(1,n,'o',dp)%mod)%mod)%mod+
        count(1,n,'u',dp)%mod)%mod;
        ;
    }
};
