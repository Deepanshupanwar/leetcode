class Solution {
public:
    int maximalNetworkRank(int n, vector<vector<int>>& roads) {
        map<int,int> m;
        vector<vector<int>> vis(n,vector<int>(n,0));
        for(int i=0;i<roads.size();i++)
        {
            if(m.find(roads[i][0])==m.end())
            {
                m[roads[i][0]]=1;
            }
            else
            {
                m[roads[i][0]]++;
            }
            if(m.find(roads[i][1])==m.end())
            {
                m[roads[i][1]]=1;
            }
            else
            {
               m[roads[i][1]]++;   
            }
            vis[roads[i][0]][roads[i][1]]=1;
            vis[roads[i][1]][roads[i][0]]=1;
        }
        int ans=0; 
        for(int i=0;i<n;i++)
        {
             for(int j=i+1;j<n;j++)
             {
                 if(vis[i][j]==1)
                    ans=max(ans,m[i]+m[j]-1);
                 else
                     ans=max(ans,m[i]+m[j]);
             }        
        }
        return ans;
    }
};
