class Solution {
public:
    long mod=1e9+7;
    long help(int n,int k,int t,vector<vector<int>> &dp)
    {
        if(t==0&&n==0)
            return 1;
        if(t<0)
            return 0;
        if(dp[n][t]!=-1)
            return dp[n][t]%mod;
        long ans=0;
        if(n>0)
        {
            
            for(int i=1;i<=k;i++)
            {
                ans+=help(n-1,k,t-i,dp)%mod;
            }
        }
        return dp[n][t]=ans%mod;
    }
    int numRollsToTarget(int n, int k, int target) {
        vector<vector<int>> dp(n+1,vector<int>(target+1,-1));
        return help(n,k,target,dp)%mod;
    }
};
